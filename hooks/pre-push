#!/usr/bin/env python3
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".
import os.path
import argparse

print(os.getcwd())
from hooks_support import git_func
from hooks_support.file_manager import create_json, read_json

diff_file_name = 'diff_data'
diff_file_path = '.'
repo_path = '.git'
mask = 'test_cases'

diff_data = git_func.get_diff(local_git_path=repo_path, mask=mask, ref_name='origin/name')
if diff_data:
    diff_data_path = create_json(name=diff_file_name, path=diff_file_path, data=diff_data, soft=False)
    print(read_json(diff_data_path))
    os.system(f'git add {diff_data_path}')
    os.system(f'git commit -m "update diff_data.json"')
else:
    print(f"Path {mask} will not changed")
